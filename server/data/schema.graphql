schema {
  query: Query
}

type BibleNav implements Node {
  id: ID!
  body: String
  url: String
}

type BibleNavConnection {
  pageInfo: PageInfo!
  edges: [BibleNavEdge]
}

type BibleNavEdge {
  node: BibleNav
  cursor: String!
}

type Library implements Node {
  id: ID!
  notebooks(after: String, first: Int, before: String, last: Int): NotebookConnection
  pages(after: String, first: Int, before: String, last: Int, page: Int, filter: String): PageConnection
}

interface Node {
  id: ID!
}

type Notebook implements Node {
  id: ID!
  url: String
  title: String
}

type NotebookConnection {
  pageInfo: PageInfo!
  edges: [NotebookEdge]
}

type NotebookEdge {
  node: Notebook
  cursor: String!
}

type Page implements Node {
  id: ID!
  currentPage: String
  numberOfPages: String
  filter: String
}

type PageConnection {
  pageInfo: PageInfo!
  edges: [PageEdge]
}

type PageEdge {
  node: Page
  cursor: String!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  node(id: ID!): Node
  viewer: User
  library: Library
}

type User implements Node {
  id: ID!
  widgets(after: String, first: Int, before: String, last: Int): WidgetConnection
  bibleNavs(after: String, first: Int, before: String, last: Int): BibleNavConnection
  username: String
  website: String
}

type Widget implements Node {
  id: ID!
  name: String
  description: String
  url: String
}

type WidgetConnection {
  pageInfo: PageInfo!
  edges: [WidgetEdge]
}

type WidgetEdge {
  node: Widget
  cursor: String!
}
